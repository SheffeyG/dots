return function(Group, c, _, s)
    -- default
    Group.new("Comment", c.grey_light)
    Group.new("Boolean", c.orange)
    Group.new("Character", c.red)
    Group.new("Conditional", c.purple)
    Group.new("Constant", c.orange)
    Group.new("Define", c.purple)
    Group.new("Delimiter", c.brown)
    Group.new("Float", c.orange)
    Group.new("Variable", c.white)
    Group.new("Function", c.blue)
    Group.new("Identifier", c.red)
    Group.new("Include", c.blue)
    Group.new("Keyword", c.purple)
    Group.new("Label", c.yellow)
    Group.new("Number", c.orange)
    Group.new("Operator", c.white)
    Group.new("PreProc", c.yellow)
    Group.new("Repeat", c.yellow)
    Group.new("Special", c.cyan)
    Group.new("SpecialChar", c.brown)
    Group.new("Statement", c.red)
    Group.new("StorageClass", c.yellow)
    Group.new("String", c.green)
    Group.new("Structure", c.purple)
    Group.new("Tag", c.yellow)
    Group.new("Todo", c.yellow, c.grey)
    Group.new("Type", c.yellow)
    Group.new("Typedef", c.yellow)

    -- treesitter
    Group.new("@module", c.red)
    Group.new("@module.builtin", c.red)

    Group.new("@constant", c.orange)
    Group.new("@constant.builtin", c.orange)
    Group.new("@constant.macro", c.red)

    Group.new("@string", c.green)
    Group.new("@string.regex", c.cyan)
    Group.new("@string.escape", c.cyan)

    Group.new("@character", c.red)
    Group.new("@character.special", c.cyan)

    Group.new("@number", c.orange)
    Group.new("@number.float", c.orange)

    Group.new("@boolean", c.orange)
    Group.new("@annotation", c.brown)
    Group.new("@attribute", c.yellow)
    Group.new("@error", c.red)

    Group.new("@keyword", c.purple)
    Group.new("@keyword.exception", c.red)
    Group.new("@keyword.function", c.purple)
    Group.new("@keyword.return", c.purple)
    Group.new("@keyword.operator", c.purple)
    Group.new("@keyword.conditional", c.purple)
    Group.new("@keyword.conditional.ternary", c.purple)
    Group.new("@keyword.repeat", c.yellow)
    Group.new("@keyword.storage", c.yellow)
    Group.new("@keyword.directive.define", c.purple)
    Group.new("@keyword.directive", c.yellow)

    Group.new("@function", c.blue)
    Group.new("@function.builtin", c.blue)
    Group.new("@function.macro", c.red)
    Group.new("@function.call", c.blue)
    Group.new("@function.method", c.blue)
    Group.new("@function.method.call", c.blue)
    Group.new("@constructor", c.cyan)

    Group.new("@punctuation.bracket", c.brown)
    Group.new("@punctuation.delimiter", c.brown)

    Group.new("@tag", c.yellow)
    Group.new("@tag.attribute", c.red)
    Group.new("@tag.delimiter", c.brown)

    Group.new("@text", c.white)
    Group.new("@text.emphasis", c.orange)
    Group.new("@text.strike", c.brown, nil, s.strikethrough)

    Group.new("@type.builtin", c.yellow)

    Group.new("@operator", c.white)
    Group.new("@symbol", c.green)
    Group.new("@reference", c.white)
    Group.new("@definition", c.grey_light, nil, s.underline)
    Group.new("@property", c.red)
    Group.new("@scope", nil, nil, s.bold)

    Group.new("@markup.heading", c.blue)
    Group.new("@markup.raw", c.orange)
    Group.new("@markup.link", c.red)
    Group.new("@markup.link.url", c.orange, nil, s.underline)
    Group.new("@markup.link.label", c.cyan)
    Group.new("@markup.list", c.red)
    Group.new("@markup.strong", nil, nil, s.bold)
    Group.new("@markup.underline", nil, nil, s.underline)
    Group.new("@markup.italic", nil, nil, s.italic)
    Group.new("@markup.strikethrough", nil, nil, s.strikethrough)
    Group.new("@markup.quote", c.grey_light)

    Group.new("@comment", c.grey_light)
    Group.new("@comment.todo", c.grey, c.white)
    Group.new("@comment.warning", c.black_light, c.orange)
    Group.new("@comment.note", c.black, c.blue)
    Group.new("@comment.danger", c.black_light, c.red)

    Group.new("@diff.plus", c.green)
    Group.new("@diff.minus", c.red)
    Group.new("@diff.delta", c.grey)
end
